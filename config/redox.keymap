/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible =  "zmk,keymap" ;

        default_layer {
// --------------------------------------------------------------------------------------------------------------------------------
// | ESC   |  1  |  2  |   3   |  4  |  5  |                   ---                |  6    |  7    |  8    |  9   | 0  |    BKSP   |
// | TAB   |  Q  |  W  |   E   |  R  |  T  |   (   |           ---        |  )    |  Y    |  U    |  I    |  O   | P  |     -     |
// | CTRL  |  A  |  S  |   D   |  F  |  G  |   [   |           ---        |  ]    |  H    |  J    |  K    |  L   | ;  |     '     |
// | SHIFT |  Z  |  X  |   C   |  V  |  B  | PG_UP | PG_DOWN | --- | HOME | END   |  N    |  M    |  ,    |  .   | /  | SHFT(RET) |
// | CRTL  | ALT | GUI | LOWER |    GUI    | LOWER | SPACE   | --- | DEL  | SPACE |     RAISE     | LEFT  | DOWN | UP |   RIGHT   |
            bindings = <
     &kp EQUAL       &kp N1   &kp N2   &kp N3    &kp N4   &kp N5                                            &kp N6    &kp N7 &kp N8           &kp N9    &kp N0    &kp MINUS
   &kp TAB         &kp Q    &kp W    &kp E     &kp R    &kp T  &kp RBKT                        &kp PSCRN  &kp Y     &kp U  &kp I            &kp O     &kp P     &kp LBKT
   &kp GRAVE       &kp A    &kp S    &kp D     &kp F    &kp G  &kp SQT                         &kp BSLH   &kp H     &kp J  &kp K            &kp L     &kp SEMI  &kp BSLH
   &mt LSHFT CLCK  &kp Z    &kp X    &kp C     &kp V    &kp B  &kp PG_UP &kp PG_DN    &kp HOME &kp END    &kp N     &kp M  &kp COMMA        &kp DOT   &kp UP    &mt RSHFT FSLH
   &kp LCTRL       &kp LGUI &kp LALT &kp ESC   &mo 1           &kp BSPC &kp DEL       &kp RET  &kp SPACE            &mo 1  &mt RALT K_APP   &kp LEFT  &kp DOWN  &kp RIGHT
            >;

        };
        
        lower_layer {
// --------------------------------------------------------------------------------------------------------------------------
// | ESC   |  1  |  2  |   3   |   4   |  5  |                   ---              |  6  |  7  |   8  |  9   |  0  |  DEL  |
// | ESC   |  1  |  2  |   3   |   4   |  5  |   (   |           ---        |  )  |  6  |  7  |   8  |  9   |  0  |  DEL  |
// | CTRL  |  -  |  =  |   [   |   ]   |  \  |   [   |           ---        |  ]  |  *  |  4  |   5  |  6   |  +  |   -   |
// | SHIFT | ESC | GUI | COPY  | PASTE |     | PG_UP | PG_DOWN | --- | HOME | END |  \  |  1  |   2  |  3   | RET |  RET  |
// | CRTL  | ALT | GUI | LOWER |     GUI     | LOWER | SPACE   | --- | DEL  |  0  |    RAISE  | LEFT | DOWN | UP  | RIGHT |
            bindings = <
   &kp F1  &kp F2    &kp F3    &kp F4    &kp F5    &kp F6                                        &kp C_MUTE    &trans       &trans      &trans       &trans      &kp KP_PLUS
   &kp F7 &kp F8    &kp F9    &kp F10    &kp F11    &kp F12    &trans               &trans &kp C_VOL_UP  &kp KP_N7    &kp KP_N8   &kp KP_N9    &trans      &kp KP_MINUS
    &trans  &trans    &trans    &trans    &trans    &trans   &trans                       &trans  &kp C_VOL_DN  &kp KP_N4    &kp KP_N5   &kp KP_N6    &trans      &kp KP_MULTIPLY
 &trans  &trans   &trans  &trans &trans &trans &trans &trans &trans &trans  &kp C_PP      &kp KP_N1    &kp KP_2   &kp KP_N3    &trans      &kp KP_DIVIDE 
   &trans  &trans    &trans    &trans          &trans        &trans &trans &trans &kp N0          &mo 3            &trans    &trans    &trans      &trans
            >;
        };

        
        
        
    };
};
